1. file RobotMoves.h																	Memory use

void LockCube()
void UnlockCube()
void AlignCubeLayers()
void FlipCube()																			2 int
void TurnCube()																			1 int
void RotateCube()																		1 int
void TurnCubeRight()																	3 int
void RotateBottomRight()																3 int

void RotateTopFace()																	3 int
void RotateRightFace()																	3 int
void RotateFrontFace()																	3 int
void RotateBackFace()																	3 int
void RotateLeftFace()																	3 int
void RotateBottomFace()																	3 int
void InvertedBottomFaceRotate()															3 int
void InvertedTopFaceRotate()															3 int
void InvertedRightFaceRotate()															3 int
void InvertedFrontFaceRotate()															3 int
void InvertedBackFaceRotate()															3 int
void InvertedLeftFaceRotate()															3 int


2. file CubeOperations.h

void InitializeSide()  																	char[10] -- 2 int
void SwapOnFaceOperation()																3 int -- 1 char
void RotateFaceRightOperation() 														1 int 
void SwapBetweenFacesOperation() 														4 int -- 1 char 
void FaceSwapOperation() 																3 int -- 1 char 
void TurnCubeOperation() 																6 int -- 1 char
void RotateBottomOperation() 															6 int -- 1 char
void ClawPullOperation() 																3 int -- 1 char
void FindComplementingEdge()  															2 int 
void FindComplementingCorners()															2 int

void RightOperation() 																	6 int -- 1 char
void InvertedRightOperation()															7 int -- 1 char
void LeftOperation()																	7 int -- 1 char
void InvertedLeftOperation()															7 int -- 1 char
void TopOperation()																		6 int -- 1 char
void InvertedTopOperation()																7 int -- 1 char
void BottomOperation()																	6 int -- 1 char
void InvertedBottomOperation()															7 int -- 1 char 
void FrontOperation()																	6 int -- 1 char
void InvertedFrontOperation()															7 int -- 1 char 
void BackOperation()																	6 int -- 1 char 
void InvertedBackOperation()															7 int -- 1 char

bool CmpArray()																			1 int + 2 int[] hvad end størrelse der er sendt med, det er pass by value
int PlaceYellowOnTop() 																	7 int -- 2 char
void ChangeRepresentationFromMoveSet()													8 int -- 1 char + int[] hvad end størrelse der er sendt med, det er pass by value
void ExecuteRobotMovesFromPath()														4 int + int[] hvad end størrelse der er sendt med, det er pass by value


3. file Heuristic.h

int FindWhiteFace()																		2 int
int CheckWhiteEdges()																	7 int	
int CheckWhiteCorner()																	9 int	
void IndividualEdgePieceCheck()															6 int			
int CheckCenterLayerEdges()																12 int 		

int HeuristicValueWhiteCross()															9 int
int HeuristicValueWhiteFace()															11 int 
int HeuristicValueCenterLayer()															14 int




4. file DeterministicLastLayer.h

int FindFaceFromColor()																	2 int -- 1 char
sub CheckEdgeCorrectness()																6 int  
sub CheckCornerCorrectness()															8 int

int EvaluateLastLayer()																	5 int[4] + 11 int				
sub FindMoveset()																		1 bool + 4 int + 5 int[16] + 1 int[24] + 2 int[2] + 1 int[5] + 1 int[33]
sub LastLayerSolution()																	1 bool + 4 int + 5 int[16] + 1 int[24] + 2 int[2] + 1 int[5] + 1 int[33]



5. file DeterministicYellowFace.h

sub EvaluateYellowFaceConfiguration()													2 int
sub EvaluateLastLayerConfiguration() 													6 int
sub FindCorrectMoveset()																1 bool + 1 int[9] + 2 int[12] + int[4] + 1 int[21] + 2 int[3] + 1 int[9] + 7 int -- 2 char
sub YellowFaceSolution()																1 bool + 1 int[9] + 2 int[12] + int[4] + 1 int[21] + 2 int[3] + 1 int[9] + 7 int -- 2 char

6. file CheckCase

char FindCaseFrontColour()																1 int
int FixCase()																			3 char + 10 int
int IncrementColors() 	 																2 int
int CheckPieces()																		6 int
int CheckForCase()																		16 int

7. file Graph.h

void CaseFix()																			Node + 16 int
void ConstructNode()																	Node + 17 int
void ConstructNodeChildren()															18 int + 2 node
int SaveThePath()																		4 int
void ResetValues()											
void PrepareNewTree()																	4 int
int CheckHeuristic()																	node + 17 int
int CheckBottomLayerLeaves()															1 int
int MoveUpInLayers() 																	2 int
void MainGraphConstruction() 															values + flag + 20 int + 2 node




8. file Main.nxc

task main()																				

(1379 bytes RAM) + (37 576 bytes in FLASH Memory) == (1,379 kb RAM) + (37,576 kb FLASH Memory)
































15 define ints (not counted)

Node
{
	2 int
	char [6][10]
}

Values
{
	4 int
}

Global
2 Node
1 Node[10]
2 int
2 int[10]
1 int [120]


- Main {1 values, 3 nodes, 34 int}
	2 int (maybe lasLeafReached needs to be deleted and tested -- Done)
	1 Values
	- Construct Node (pass by value 3 int) {3 int, 1 Node}
		1 Node

	In while
	- Construct Node children {4 int, 2 Node}
		1 int
		1 Node (has to be moved outside for loop and tested -- done)
		- Uses Construct Node on top

	- CheckBottomLayerLeaves {12 int}
		1 int
		- CheckHeuristic {11 int}
			1 int
			- for loop
				1 int
			- for loop
				1 int	
			- PrepareNewTree {7 int}			
				- for loop
					1 int
				- for loop
					1 int
				- SaveThePath(pass by value 3 int) {4 int}
					- for loop
						1 int
				- ResetValues
					
				- for loop
					1 int
			- for loop
				1 int
	- MoveUpInLayers {13 int}	
		2 int
		- CheckHeuristic
		

Total -- 5 Nodes, 34 int, 2 int[10], 1 int[120], 1 values
Conclusion with int as short on NXT

int 2 bytes



Worst case ---- 










						