#include "Graph.h"
task main()
{
char top[10] = { 'b', 'r', 'y', 'g', 'w', 'g', 'w', 'r', 'w'};
char right[10] = { 'y', 'w', 'w', 'r', 'r', 'g', 'r', 'w', 'o'};
char front[10] = { 'b', 'b', 'b', 'b', 'g', 'o', 'r', 'o', 'o'};
char back[10] = { 'r', 'b', 'o', 'w', 'b', 'w', 'y', 'g', 'g'};
char left[10] = { 'o', 'y', 'r', 'o', 'o', 'o', 'g', 'r', 'y'};
char bottom[10] = { 'b', 'y', 'g', 'y', 'y', 'b', 'w', 'y', 'g'};

// 2 layers at bot - yellow top blue front - works

//2 layers top - white top blue front - works



InitializeSide(top, TOP_FACE);
InitializeSide(right, RIGHT_FACE);
InitializeSide(front, FRONT_FACE);
InitializeSide(back, BACK_FACE);
InitializeSide(left, LEFT_FACE);
InitializeSide(bottom, BOTTOM_FACE);

BESTHEURISTIC = HeuristicValue();

while(BESTHEURISTIC != 0)
{
    RootNodeMethod(myCube);
    PlaySound(SOUND_CLICK);
}
    PlaySound(SOUND_UP);
TextOut(0,LCD_LINE6,"Path: " );
for(int i = 0; i<ArrayLen(FullPath);i++)
{
	if(FullPath[i] == "R" || FullPath[i] == "IR"
	|| FullPath[i] == "L" || FullPath[i] == "IL"
	|| FullPath[i] == "T" || FullPath[i] == "IT"
	|| FullPath[i] == "B" || FullPath[i] == "IB"
	|| FullPath[i] == "F" || FullPath[i] == "IF"
	|| FullPath[i] == "V" || FullPath[i] == "IV")
        TextOut(8*i,LCD_LINE7,FullPath[i]);
}
Wait(50000);

TestMethod();

}

void TestMethod()
{
Wait(500);
}
