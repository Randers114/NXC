#include "DeterministicYellowFace.h"

void WriteFile()
{
    byte handle;
    remove("initialCube.txt");
    handle = fopen("initialCube.txt", "w");

    for(int face = 0; face < 6; face++)
    {
        for(int piece = 0; piece < 9; piece++)
        {
            fputc(myCube[face][piece], handle);
            fputc(' ', handle);
        }

        fputs("\n", handle);
    }

    fclose(handle);
}

void ReadFile(int &path[])
{
    byte handle;
    int tempArray[];
    int tempNumber, count = 0;
    string charRead = "", pathString = "";
    char c;
    
    handle = fopen("cube_path.txt", "r");
    
    for(int face = 0; face < 6; face++)
    {
        for(int piece = 0; piece < 9; piece++)
        {
            myCube[face][piece] = fgetc(handle);
            fgetc(handle);
        }

        fgetc(handle);
        fgetc(handle);
    }
    
    while(charRead != "$")
    {
        fgets(charRead, 1, handle);
        if(charRead != "$")
        {
            pathString = StrCat(pathString, charRead);
        }
    }
    fclose(handle);
    
    charRead = "    ";
    
    for(int i = 0; i < StrLen(pathString); i++)
    {
        if(pathString[i] != ' ')
        {
            if(pathString[i+1] != ' ')
            {
                charRead[0] = pathString[i];
                charRead[1] = pathString[i+1];
                tempNumber = StrToNum(charRead);
                ArrayBuild(tempArray, path, tempNumber);
                ArrayBuild(path, tempArray);
                charRead = "  ";
                i++;
            }
            else if (pathString[i+1] == ' ')
            {
                charRead[0] = pathString[i];
                tempNumber = StrToNum(charRead);
                ArrayBuild(tempArray, path, tempNumber);
                ArrayBuild(path, tempArray);
                charRead = "  ";
            }
        }
    }
}

int PathLength(int fullPath[])
{
    int pathLength = 0;
    for(int i = 0; i < ArrayLen(fullPath); i++)
    {
        if(fullPath[i] != 0)
        {
            pathLength++;
        }
    }
    
    return pathLength;
}


task main()
{
    int fullPath[], yellowFaceSolutionPath[], lastLayerSolutionPath[], pathLength, graphPath[];
   
    ReadCubeColours();
  
    WriteFile();
  
    TextOut(0, LCD_LINE1, "Wait for PC ");
    WaitForButtonPress();
   
    ReadFile(graphPath);

    YellowFaceSolution(yellowFaceSolutionPath);
  
    LastLayerSolution(lastLayerSolutionPath);
  
    ArrayBuild(fullPath, graphPath, yellowFaceSolutionPath, lastLayerSolutionPath);
  
    pathLength = PathLength(fullPath);
  
    TextOut(0, LCD_LINE1, "Done Length: ");
	  NumOut(0, LCD_LINE2, pathLength);
	
	  ExecuteRobotMovesFromPath(fullPath);
	
	  UnlockCube();
}
